package model;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

public class DAO
{

	// MODELO DE CONEXÃO:

	// PARAMETROS:

	private String driver = "com.mysql.cj.jdbc.Driver";

	private String url = "jdbc:mysql://localhost:3306/dbagenda?useTimezone=true&serverTimezone=UTC";

	private String user = "root";

	private String password = "root";

	// Metodo de conexão:

	private Connection conectar()
	{
		Connection con = null;

		try
		{
			Class.forName(driver);
			con = DriverManager.getConnection(url, user, password);
			return con;
		} catch (Exception e)
		{
			System.out.println(e);
			return null;
		}
	}

	// Teste de conexão:
	/*
	 * public void testeConexao() { try { Connection con = conectar();
	 * System.out.println(con); con.close(); } catch (Exception e) {
	 * System.out.println(e); } }
	 */

	/* CRUD CREATE */

	public void inserirContato(JavaBeans contato)
	{
		String create = "insert into contatos (nome,fone,email) values (?,?,?)";

		try
		{
			//Abrir a conexao:
			Connection con = conectar();

			//Preparar a query para a execução no banco de dados:
			PreparedStatement pst = con.prepareStatement(create);

			//Substituir os paramentos (?) pelo conteudo da variaveis do Javabeans:
			pst.setString(1, contato.getNome());
			pst.setString(2, contato.getFone());
			pst.setString(3, contato.getEmail());

			//Executar a query
			pst.executeUpdate();

			//Encerrar a conexao com o banco:
			con.close();

		} catch (Exception e)
		{
			System.out.println(e);
		}
	}

	// CRUD READ:

	public ArrayList<JavaBeans> listarContatos()
	{

		//CRIANDO UM OBJETO PARA ACESSAR A CLASSE JAVABEANS:
		ArrayList<JavaBeans> contatos = new ArrayList<>();

		//ATRIBUINDO A QUERY A VARIAVEL READ:

		String read = "select * from contatos order by nome";

		try
		{
			//Abrir a conexao:

			Connection con = conectar();

			//Preparar a query para a execução no banco de dados:

			PreparedStatement pst = con.prepareStatement(read);

			//EXECUTA A QUERY:

			ResultSet rs = pst.executeQuery();

			//LAÇO SERA EXECUTADO ENQUANTO HOUVER CONTATOS:

			while (rs.next())
			{
				//VARIAVEIS DE APOIO QUE RECEBEM OS DADOS DO BANCO:

				String idcon = rs.getString(1);
				String nome = rs.getString(2);
				String fone = rs.getString(3);
				String email = rs.getString(4);

				//ARMAZENAR NO ARRAYLIST

				contatos.add(new JavaBeans(idcon, nome, fone, email));
			}

			//FECHA CONEXÃO DO BANCO:
			con.close();

			return contatos;

		} catch (Exception e)
		{
			System.out.println(e);
			return null;
		}
	}

	//CRUD UPDATE:

	//SELECIONAR CONTATO:

	public void selecionarContato(JavaBeans contato)
	{
		String read2 = "select * from contatos where idcon = ?";

		try
		{
			//Abrir a conexao:

			Connection con = conectar();

			//Preparar a query para a execução no banco de dados:

			PreparedStatement pst = con.prepareStatement(read2);

			//SUBSTITUIR A INTERROGAÇÃO (?) DA QUERY ACIMA - READ2 -
			//PELO ID SETADO NA REQUISIÇÃO NA CLASSE CONTROLE:

			pst.setString(1, contato.getIdcon());

			//EXECUTA A QUERY:

			ResultSet rs = pst.executeQuery();

			//ENQUANTO TIVER DADOS

			while (rs.next())
			{
				//SETAR AS VARIAVEIS JAVABEANS:

				contato.setIdcon(rs.getString(1));
				contato.setNome(rs.getString(2));
				contato.setFone(rs.getString(3));
				contato.setEmail(rs.getString(4));
			}

			//FECHA A CONEXAO COM O BANCO:

			con.close();

		} catch (Exception e)
		{
			System.out.println(e);
		}
	}

	//ALTERAR CONTATO:

	public void alterarContato(JavaBeans contato)
	{
		String update = "update contatos set nome=?, fone=?, email=? where idcon=?";

		try
		{
			//Abrir a conexao:

			Connection con = conectar();

			//Preparar a query para a execução no banco de dados:

			PreparedStatement pst = con.prepareStatement(update);

			//SUBSTITUIR AS INTERROGAÇÕES (?) DA QUERY - CREATE -
			//PELAS VARIAVEIS DO OBJETO DE INSTACIA 'CONTATO' DA CLASE JAVABEANS
			//PASSADA COMO ATRIBUTO DESSE METODO:

			pst.setString(1, contato.getNome());
			pst.setString(2, contato.getFone());
			pst.setString(3, contato.getEmail());
			pst.setString(4, contato.getIdcon());

			//EXECUTA A QUERY:

			pst.executeUpdate();

			//FEICHA A CONEXAO COM O BANCO:

			con.close();

		} catch (Exception e)
		{
			System.out.println(e);
		}
	}

	/* CRUD DELETE */

	//REMOVER CONTATO:

	public void deletarContato(JavaBeans contato)
	{
		String delete = "delete from contatos where idcon = ?";

		try
		{

			//Abrir a conexao:

			Connection con = conectar();

			//Preparar a query para a execução no banco de dados:

			PreparedStatement pst = con.prepareStatement(delete);

			//SUBSTITUIR A INTERROGAÇÃO (?) DA QUERY ACIMA - READ2 -
			//PELO ID SETADO NA REQUISIÇÃO NA CLASSE CONTROLE:

			pst.setString(1, contato.getIdcon());

			//EXECUTA A QUERY:

			pst.executeUpdate();

			//FECHA A CONEXAO COM O BANCO:

			con.close();

		} catch (Exception e)
		{
			System.out.println(e);
		}
	}
}
